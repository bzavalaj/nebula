{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nebuladatafactorycrea"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"nebulaBlobStoragecreaLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'nebulaBlobStoragecreaLS'"
		},
		"nebulaDataLakegen2LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'nebulaDataLakegen2LS'"
		},
		"nebulaDatabricksDeltaLakecreaLS_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'nebulaDatabricksDeltaLakecreaLS'"
		},
		"nebuladatabrickscreaLS_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'nebuladatabrickscreaLS'"
		},
		"nebulaDataLakegen2LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagesynapsecrea.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/carga files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.carga,'bronze')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "carga silver o gold",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "silver o gold",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"carga": {
												"value": "@pipeline().parameters.carga",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "carga bronze",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "carga_bronze",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"carga": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/silver o gold')]",
				"[concat(variables('factoryId'), '/pipelines/carga_bronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/carga_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "bronze_files",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/nebula_etl/bronze_files",
							"baseParameters": {
								"path": {
									"value": "@pipeline().parameters.path",
									"type": "Expression"
								},
								"file_name": {
									"value": "@pipeline().parameters.file_name",
									"type": "Expression"
								},
								"sas": {
									"value": "@pipeline().parameters.sas",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nebuladatabrickscreaLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"sas": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nebuladatabrickscreaLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/carga_gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "gold",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/nebula_etl/gold_files"
						},
						"linkedServiceName": {
							"referenceName": "nebuladatabrickscreaLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nebuladatabrickscreaLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/carga_silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/nebula_etl/silver_files"
						},
						"linkedServiceName": {
							"referenceName": "nebuladatabrickscreaLS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nebuladatabrickscreaLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silver o gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.carga, 'silver')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ejecutar gold",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "carga_gold",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ejecutar silver",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "carga_silver",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"carga": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/carga_gold')]",
				"[concat(variables('factoryId'), '/pipelines/carga_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "Employee_Name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EmpID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MarriedID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MaritalStatusID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GenderID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EmpStatusID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DeptID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PerfScoreID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FromDiversityJobFairID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Termd",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PositionID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Position",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "State",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Zip",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DOB",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Sex",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MaritalDesc",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CitizenDesc",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HispanicLatino",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RaceDesc",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DateofHire",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EmploymentStatus",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Department",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ManagerName",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ManagerID",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "RecruitmentSource",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PerformanceScore",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EngagementSurvey",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "EmpSatisfaction",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SpecialProjectsCount",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastPerformanceReview_Date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DaysLateLast30",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Absences",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "hr3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "stage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nebulaDataLakegen2LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dwhsynapsecrea"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nebulaDataLakegen2LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nebulaDatabricksDeltaLakeDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nebulaDatabricksDeltaLakecreaLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "default",
					"table": "bronze1"
				},
				"schema": [
					{
						"name": "Employee_Name",
						"type": "string"
					},
					{
						"name": "EmpID",
						"type": "string"
					},
					{
						"name": "MarriedID",
						"type": "string"
					},
					{
						"name": "MaritalStatusID",
						"type": "string"
					},
					{
						"name": "GenderID",
						"type": "string"
					},
					{
						"name": "EmpStatusID",
						"type": "string"
					},
					{
						"name": "DeptID",
						"type": "string"
					},
					{
						"name": "PerfScoreID",
						"type": "string"
					},
					{
						"name": "FromDiversityJobFairID",
						"type": "string"
					},
					{
						"name": "Salary",
						"type": "string"
					},
					{
						"name": "Termd",
						"type": "string"
					},
					{
						"name": "PositionID",
						"type": "string"
					},
					{
						"name": "Position",
						"type": "string"
					},
					{
						"name": "State",
						"type": "string"
					},
					{
						"name": "Zip",
						"type": "string"
					},
					{
						"name": "DOB",
						"type": "string"
					},
					{
						"name": "Sex",
						"type": "string"
					},
					{
						"name": "MaritalDesc",
						"type": "string"
					},
					{
						"name": "CitizenDesc",
						"type": "string"
					},
					{
						"name": "HispanicLatino",
						"type": "string"
					},
					{
						"name": "RaceDesc",
						"type": "string"
					},
					{
						"name": "DateofHire",
						"type": "string"
					},
					{
						"name": "DateofTermination",
						"type": "string"
					},
					{
						"name": "TermReason",
						"type": "string"
					},
					{
						"name": "EmploymentStatus",
						"type": "string"
					},
					{
						"name": "Department",
						"type": "string"
					},
					{
						"name": "ManagerName",
						"type": "string"
					},
					{
						"name": "ManagerID",
						"type": "string"
					},
					{
						"name": "RecruitmentSource",
						"type": "string"
					},
					{
						"name": "PerformanceScore",
						"type": "string"
					},
					{
						"name": "EngagementSurvey",
						"type": "string"
					},
					{
						"name": "EmpSatisfaction",
						"type": "string"
					},
					{
						"name": "SpecialProjectsCount",
						"type": "string"
					},
					{
						"name": "LastPerformanceReview_Date",
						"type": "string"
					},
					{
						"name": "DaysLateLast30",
						"type": "string"
					},
					{
						"name": "Absences",
						"type": "string"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nebulaDatabricksDeltaLakecreaLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nebulaBlobStoragecreaLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('nebulaBlobStoragecreaLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nebulaDataLakegen2LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('nebulaDataLakegen2LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('nebulaDataLakegen2LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nebulaDatabricksDeltaLakecreaLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-6419808944201371.11.azuredatabricks.net",
					"clusterId": "0329-002522-t1zkinyf",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('nebulaDatabricksDeltaLakecreaLS_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nebuladatabrickscreaLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6419808944201371.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('nebuladatabrickscreaLS_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		}
	]
}